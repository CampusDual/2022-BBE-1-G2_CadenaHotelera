--crear tablas usuarios--
drop table if exists TROLE_SERVER_PERMISSION;
drop table if exists TUSER_ROLE;
drop table if exists employee_clock;
drop table if exists employee_schedule;
drop table if exists employee;
drop table if exists employee_type;
drop table if exists TUSER;
drop table if exists TROLE;
drop table if exists TSERVER_PERMISSION;
drop table if exists TREQUEST_STATISTICS;
drop table if exists TSETTING;
drop table if exists TUSER_PREFERENCE;
drop table if exists TI18N;
drop table if exists TI18N_VALUE;

CREATE TABLE PUBLIC.TUSER(
USER_ VARCHAR(50) NOT NULL PRIMARY KEY,
PASSWORD VARCHAR(50),NAME VARCHAR(50),
SURNAME VARCHAR(50),
EMAIL VARCHAR(50),
NIF VARCHAR(50),
USERBLOCKED TIMESTAMP,
LASTPASSWORDUPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FIRSTLOGIN BOOLEAN DEFAULT TRUE);

CREATE  TABLE PUBLIC.TROLE(
ID_ROLENAME INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
ROLENAME VARCHAR(255),
XMLCLIENTPERMISSION VARCHAR(10485760));

CREATE TABLE PUBLIC.TUSER_ROLE(
ID_USER_ROLE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
ID_ROLENAME INTEGER,
USER_ VARCHAR(50),
CONSTRAINT FK_TUSER FOREIGN KEY(USER_) REFERENCES PUBLIC.TUSER(USER_),
CONSTRAINT FK_TROLE FOREIGN KEY(ID_ROLENAME) REFERENCES PUBLIC.TROLE(ID_ROLENAME));

CREATE  TABLE PUBLIC.TSERVER_PERMISSION(
ID_SERVER_PERMISSION INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
PERMISSION_NAME VARCHAR(10485760));

CREATE TABLE PUBLIC.TREQUEST_STATISTICS(
ID_REQUEST_STATISTICS INTEGER NOT NULL PRIMARY KEY,
SERVICE_NAME VARCHAR(255),
METHOD_NAME VARCHAR(50),
USER_NAME VARCHAR(50),
EXECUTION_DATE DATE,
EXECUTION_TIME INTEGER,
METHOD_PARAMS VARCHAR(5000),
SERVICE_EXCEPTION VARCHAR(5000));

CREATE TABLE TSETTING(
ID_SETTING INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
SETTING_KEY VARCHAR(10485760),
SETTING_VALUE VARCHAR(10485760),
SETTING_COMMENT VARCHAR(10485760));

CREATE TABLE PUBLIC.TUSER_PREFERENCE(
ID_USER_PREFERENCE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
PREFERENCE_NAME VARCHAR(150),
USER_LOGIN VARCHAR(150),
PREFERENCE_VALUE VARCHAR(10485760));

CREATE  TABLE PUBLIC.TI18N(
ID_I18N INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
CLASS_NAME VARCHAR(150),
I18N_DESCRIPTION VARCHAR(250));

CREATE  TABLE PUBLIC.TI18N_VALUE(
ID_I18N_VALUE INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 34) NOT NULL PRIMARY KEY,
ID_I18N INTEGER NOT NULL,
"KEY" VARCHAR(250),
ES_ES VARCHAR(10485760),
EN_US VARCHAR(10485760),
GL_ES VARCHAR(10485760));

CREATE  TABLE PUBLIC.TROLE_SERVER_PERMISSION(
ID_ROLE_SERVER_PERMISSION INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
ID_ROLENAME INTEGER,ID_SERVER_PERMISSION INTEGER,
CONSTRAINT FK_TROLE_SERVER_PERMISSION FOREIGN KEY(ID_ROLENAME) REFERENCES PUBLIC.TROLE(ID_ROLENAME),
CONSTRAINT FK_TSERVER_PERMISSION FOREIGN KEY(ID_SERVER_PERMISSION) REFERENCES PUBLIC.TSERVER_PERMISSION(ID_SERVER_PERMISSION));

INSERT INTO TUSER VALUES('god','password','name','surname',NULL,'44460713B',NULL,NULL,NULL);
INSERT INTO TROLE VALUES(0,'admin','<?xml version="1.0" encoding="UTF-8"?><security></security>');
INSERT INTO TUSER_ROLE(id_rolename,user_) VALUES(0,'god');


INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.jee.common.services.user.IUserInformationService/getUserInformation');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IUserService/userQuery');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingFreeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingOcupiedQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingByType');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingFreeByTypeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingcheckintodayQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingSearchByClient');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/checkIn');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/checkOut');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingFreeByCityOrHotel');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/getBudget');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingOcupiedCleanQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingService/bookingRoomChange');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingService/getPdfReport');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingGuestService/bookingGuestQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingGuestService/bookingGuestInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingGuestService/bookingGuestUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IBookingGuestService/bookingGuestDelete');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/clientQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/clientInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/clientUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/clientDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/clientsInDateQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IClientService/sendMailClients');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeTypeService/employeeTypeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeTypeService/employeeTypeInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeTypeService/employeeTypeUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeTypeService/employeeTypeDelete');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeScheduleService/employeeScheduleQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeScheduleService/employeeScheduleInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeScheduleService/employeeScheduleUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeScheduleService/employeeScheduleDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeScheduleService/employeeScheduleToday');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockIn');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeClockService/employeeClockOut');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/hotelQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/hotelInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/hotelUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/hotelDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/getHotelByCoordinates');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/getAirports');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/getRecommendations');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IHotelService/getWeather');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomUpdateStatus');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomService/roomMarkDirty');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomTypeService/roomTypeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomTypeService/roomTypeInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomTypeService/roomTypeUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IRoomTypeService/roomTypeDelete');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeService/employeeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeService/employeeInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeService/employeeUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeService/employeeDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IEmployeeService/employeeCreateUser');

INSERT INTO tserver_permission(permission_name) values ('com.ontimize.hr.api.core.service.ISeasonService/seasonQuery');
INSERT INTO tserver_permission(permission_name) values ('com.ontimize.hr.api.core.service.ISeasonService/seasonInsert');
INSERT INTO tserver_permission(permission_name) values ('com.ontimize.hr.api.core.service.ISeasonService/seasonUpdate');
INSERT INTO tserver_permission(permission_name) values ('com.ontimize.hr.api.core.service.ISeasonService/seasonDelete');

INSERT INTO TSERVER_PERMISSION(PERMISSION_NAME) VALUES ('com.ontimize.hr.api.core.service.IDatesSeasonService/datesSeasonQuery');
INSERT INTO TSERVER_PERMISSION(PERMISSION_NAME) VALUES ('com.ontimize.hr.api.core.service.IDatesSeasonService/datesSeasonInsert');
INSERT INTO TSERVER_PERMISSION(PERMISSION_NAME) VALUES ('com.ontimize.hr.api.core.service.IDatesSeasonService/datesSeasonUpdate');
INSERT INTO TSERVER_PERMISSION(PERMISSION_NAME) VALUES ('com.ontimize.hr.api.core.service.IDatesSeasonService/datesSeasonDelete');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IOffersService/offerQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IOffersService/offerInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IOffersService/offerUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IOffersService/offerDelete');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES('com.ontimize.hr.api.core.service.IOffersService/offersByDateRange');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeService/detailsTypeQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeService/detailsTypeInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeService/detailsTypeUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeService/detailsTypeDelete');

INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeHotelService/detailsTypeHotelQuery');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeHotelService/detailsTypeHotelInsert');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeHotelService/detailsTypeHotelUpdate');
INSERT INTO TSERVER_PERMISSION(permission_name) VALUES ('com.ontimize.hr.api.core.service.IDetailsTypeHotelService/detailsTypeHotelDelete');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingDetailsService/bookingDetailsQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingDetailsService/bookingDetailsInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingDetailsService/bookingDetailsUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingDetailsService/bookingDetailsDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBookingDetailsService/bookingDetailsAdd');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ICancellationsService/cancellationsQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ICancellationsService/cancellationsInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ICancellationsService/cancellationsUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ICancellationsService/cancellationsDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ICancellationsService/cancelBooking');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/pictureQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/pictureInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/pictureUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/pictureDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/getPicture');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/postPicture');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IPictureService/getPictureArray');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IRoomStatusRecordService/roomStatusRecordQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IRoomStatusRecordService/roomStatusRecordInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IRoomStatusRecordService/roomStatusRecordUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IRoomStatusRecordService/roomStatusRecordDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IRoomStatusRecordService/roomStatusRecordSearch');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferCreate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferListAll');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferListAlternatives');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersService/specialOfferDisable');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersCodesService/specialOfferCodeQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersCodesService/specialOfferCodeInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersCodesService/specialOfferCodeUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersCodesService/specialOfferCodeDelete');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionAdd');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionModify');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersConditionsService/specialOfferConditionRemove');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductQuery');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductInsert');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductUpdate');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductDelete');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductAdd');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductModify');
INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.ISpecialOffersProductsService/specialOfferProductRemove');

INSERT INTO tserver_permission(permission_name) VALUES ('com.ontimize.hr.api.core.service.IBirthdayService/setEnabledServiceBirthdayMail');


INSERT INTO TSETTING VALUES(0,'mail_host','smtp.gmail.com','Host del servidor');
INSERT INTO TSETTING VALUES(1,'mail_port','587','Puerto del servidor de email');
INSERT INTO TSETTING VALUES(2,'mail_protocol','smtp','Protocolo de env\u005cu00edo de mails');
INSERT INTO TSETTING VALUES(3,'mail_user','mi.mail@example.com','Usuario para el env\u005cu00edo de mails');
INSERT INTO TSETTING VALUES(4,'mail_password','mis_credenciales','Password del servidor de mail');
INSERT INTO TSETTING VALUES(5,'mail_encoding','UTF-8','Codificaci\u005cu00f3n de mails');
INSERT INTO TSETTING VALUES(6,'mail_properties','mail.smtp.auth:true;mail.smtp.starttls.enable:true;','Propiedades de mails');
INSERT INTO TSETTING VALUES(7,'report_folder','C:/applications/ontimize-boot-app/reports','Carpeta de las plantillas de report');
INSERT INTO TUSER_PREFERENCE VALUES(0,'user_preference','demo','Iw0KI1R1ZSBNYXkgMTYgMTI6NTc6MDYgQ0VTVCAyMDE3DQpkZW1vX2FwcF9zdGF0dXNfYmFyX3Zpc2libGU9eWVzDQpkZW1vX2FkanVzdF90cmVlX3NwYWNlPXRydWUNCmRlbW9fYXBwX3dpbmRvd19zdGF0ZT0wDQpkZW1vX3RhYmxlX2NvbmZfc29ydF9maWx0ZXJfZm9ybUN1c3RvbWVyLnhtbF9DdXN0b21lclNlcnZpY2UuY3VzdG9tZXJfVEVTVD1udWxsO251bGw7U1VSTkFNRVw9OThcOjF8SURcPTc1XDoyfE5BTUVcPTk5XDozfENVU1RPTUVSVFlQRUlEXD0wXDo0fENVU1RPTUVSSURcPTEyNVw6NXxBRERSRVNTXD0xMjNcOjZ8UEhPTkVcPTEyMVw6N3xTVEFSVERBVEVcPTEzNlw6OHxMT05HSVRVREVcPTExNlw6OXxMQVRJVFVERVw9MTEzXDoxMHxFTUFJTFw9MTcwXDoxMnw7QkFTRTY0ck8wQUJYTnlBQk5xWVhaaExuVjBhV3d1U0dGemFIUmhZbXhsRTdzUEpTRks1TGdEQUFKR0FBcHNiMkZrUm1GamRHOXlTUUFKZEdoeVpYTm9iMnhrZUhBL1FBQUFBQUFBQ0hjSUFBQUFDd0FBQUFCNA0KZGVtb190YWJsZV9jb25mX3NvcnRfZmlsdGVyX2NvbmZpZ3VyYXRpb25zX2Zvcm1DdXN0b21lci54bWxfQ3VzdG9tZXJTZXJ2aWNlLmN1c3RvbWVyPVRFU1QNCmRlbW9fdGFibGVfY29udHJvbF9wYW5lbF9mb3JtQWNjb3VudHMtZGV0YWlsLnhtbF9Nb3ZlbWVudFNlcnZpY2UubW92ZW1lbnQ9Z3JvdXB0YWJsZWtleTtkZWZhdWx0Y2hhcnRidXR0b247ZXhjZWxleHBvcnRidXR0b247c3Vtcm93YnV0dG9uO2NhbGN1bGVkY29sc2J1dHRvbjtwcmludGluZ2J1dHRvbjtmaWx0ZXJzYXZlYnV0dG9uO3Zpc2libGVjb2xzYnV0dG9uO2h0bWxleHBvcnRidXR0b247Y29weWJ1dHRvbjtncm91cHRhYmxla2V5O2luc2VydGJ1dHRvbjtyZWZyZXNoYnV0dG9uDQpkZW1vX2Zvcm1CcmFuY2hlcy1kZXRhaWwueG1sPTg4MDs1MDU7LTExNTA7MzY5DQpkZW1vX2RldGFpbF9kaWFsb2dfc2l6ZV9wb3NpdGlvbl9mb3JtQ3VzdG9tZXIueG1sX0N1c3RvbWVyU2VydmljZS5jdXN0b21lcj03NDk7MzUwOy0xOTA1OzM5MQ0KZGVtb19hcHBfdG9vbGJhcl9sb2NhdGlvbj1Ob3J0aA0KZGVtb19hcHBfd2luZG93X3Bvc2l0aW9uPS0xNTgwOzExDQpkZW1vX2FwcF93aW5kb3dfc2l6ZT0xNTg0OzEwNDQNCmRlbW9fZm9ybUVtcGxveWVlcy1kZXRhaWwueG1sPTExMTY7NzM5OzYxMDsxOTUNCmRlbW9fZm9ybUFjY291bnRzLWRldGFpbC54bWw9OTE1OzUwMDstMTE1MDszNjkNCg==');
INSERT INTO TI18N VALUES(0,'i18n.bundle','Resource bundle in database');

-- ALL PERMISSION FOR ADMIN
insert into trole_server_permission(id_rolename, id_server_permission)
select
    0,
    t.id_server_permission
from tserver_permission t;

--Crear tablas de hotel--

drop table if exists cancellations;
drop table if exists dates_season;
drop table if exists season;
drop table if exists offers;
drop table if exists booking_details;
drop table if exists special_offer_code;
drop table if exists special_offer_condition;
drop table if exists special_offer_product;
drop table if exists details_type_hotel;
drop table if exists details_type;
drop table if exists booking_guest;
drop table if exists booking;
drop table if exists special_offer;
drop table if exists status_booking;
drop table if exists room_status_record;
drop  table if exists room;
drop table if exists room_status;
drop table if exists Picture;
drop table if exists room_type;
drop  table if exists client;
drop table if exists hotel;

CREATE TABLE if not exists hotel(
    htl_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    htl_name varchar(100) NOT NULL,
    htl_city varchar(50),
    htl_address varchar(255),
    htl_zip_code varchar(20),
    htl_email varchar(150),
    htl_phone varchar(20),
    htl_stars integer,
    htl_latitude varchar(30),
    htl_longitude varchar(30),
    CONSTRAINT CK_hotel_htl_name CHECK (ltrim(rtrim(hotel.htl_name))<>''),
    CONSTRAINT UQ_hotel_htl_email UNIQUE (htl_email)
);

CREATE TABLE if not exists room_type(
    rtyp_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    rtyp_name varchar(20) NOT NULL,
    rtyp_bed_number integer NOT NULL,
    rtyp_base_price decimal(10,2) NOT NULL,
    rtyp_capacity integer NOT NULL,
    CONSTRAINT CK_room_type_rtyp_name CHECK (ltrim(rtrim(room_type.rtyp_name))<>''),
    CONSTRAINT UQ_room_type_rtyp_name UNIQUE (rtyp_name)
);

CREATE TABLE if not exists client(
    cli_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    cli_name varchar(30) NOT NULL,
    cli_surname1 varchar(30) NOT NULL,
    cli_surname2 varchar(30),
    cli_birthday date not null,
    cli_identification varchar(20) not null,
    cli_phone varchar(20),
    cli_email varchar(150),
    cli_email_subscription boolean DEFAULT true,
    CONSTRAINT CK_client_cli_name CHECK (ltrim(rtrim(client.cli_name))<>''),
    CONSTRAINT CK_client_cli_surname1 CHECK (ltrim(rtrim(client.cli_surname1))<>''),
    CONSTRAINT UQ_client_cli_birthday_cli_identification UNIQUE (cli_identification,cli_birthday),
    CONSTRAINT UQ_client_cli_email UNIQUE (cli_email)

);

create table if not exists room_status(
	rsts_id Integer GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	rsts_status Varchar(50) not null,
	rsts_description varchar(100)
);

CREATE TABLE if not exists room(
   	rom_htl_id INTEGER,
	rom_number varchar(15),
    rom_typ_id integer NOT NULL,
    rom_rsts_id integer,
    rom_status_start date,
    rom_status_end date,
    CONSTRAINT CK_room_rom_number CHECK (ltrim(rtrim(room.rom_number))<>''),
    constraint pk_room primary key (rom_htl_id,rom_number),
    constraint fk_room_room_status foreign key (rom_rsts_id) references room_status(rsts_id)
);

ALTER TABLE room ADD CONSTRAINT fk_type_room FOREIGN KEY(rom_typ_id) REFERENCES room_type(rtyp_id);
ALTER TABLE room ADD CONSTRAINT fk_hotel_room FOREIGN KEY(rom_htl_id) REFERENCES hotel(htl_id);

CREATE TABLE if not exists status_booking(
    sta_bok_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    sta_bok_code varchar(2) not null,
    sta_bok_description varchar(200),
    CONSTRAINT uq_code_status UNIQUE (sta_bok_code)
);

Create TABLE if not exists special_offer(
    sofr_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    sofr_active_start date,
    sofr_active_end date,
    sofr_active boolean not null default true,
    sofr_stackable boolean not null default false
);

CREATE TABLE if not exists special_offer_code(
    ofcd_sofr_id INTEGER,
    ofcd_code varchar(15),
    ofcd_active_start date,
    ofcd_active_end date,
    ofcd_active boolean not null default true,
    CONSTRAINT pk_ofcd PRIMARY KEY (ofcd_sofr_id,ofcd_code),
    CONSTRAINT fk_sofr FOREIGN KEY (ofcd_sofr_id) REFERENCES special_offer(sofr_id)
);

CREATE TABLE if not exists booking(
    bok_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    bok_cli_id integer NOT NULL,
    bok_htl_id INTEGER NOT NULL,
	bok_rom_number varchar(15)NOT NULL,
    bok_entry_date date NOT NULL,
    bok_departure_date date,
    bok_comments varchar(255),
    bok_created_by_user varchar(255),
    bok_created_date timestamp default current_timestamp,
    bok_modified_date timestamp,
    bok_status_code varchar(2) not null DEFAULT 'A',
    bok_soffer_id integer,
    bok_final_billing DECIMAL(10,2),
    CONSTRAINT fk_client_booking FOREIGN KEY(bok_cli_id) REFERENCES client(cli_id),
    CONSTRAINT fk_room_booking FOREIGN KEY(bok_rom_number,bok_htl_id) REFERENCES room(rom_number,rom_htl_id),
    CONSTRAINT fk_status_code FOREIGN KEY (bok_status_code) REFERENCES status_booking(sta_bok_code),
    CONSTRAINT fk_soffer_id FOREIGN KEY(bok_soffer_id) REFERENCES special_offer(sofr_id)
);

INSERT INTO status_booking (sta_bok_code,sta_bok_description) VALUES ('A','ACTIVE');
INSERT INTO status_booking (STA_BOK_CODE, STA_BOK_DESCRIPTION) VALUES ('F','FINISHED');
INSERT INTO status_booking (sta_bok_code, sta_bok_description) VALUES ('C','CANCELLED');

create table if not exists booking_guest(
	bog_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	bog_bok_id integer,
	bog_cli_id integer,	
	constraint fk_guest_booking_id foreign key (bog_bok_id) references booking(bok_id),
	constraint fk_guest_client_id foreign key (bog_cli_id) references client(cli_id)
);

create table if not exists employee_type(
	etyp_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	etyp_name varchar(50) not null,
	etyp_desc varchar(255),
    etyp_role_id integer,
	constraint uq_etyp_name UNIQUE (etyp_name),
    constraint fk_employee_type_trole FOREIGN KEY(etyp_role_id) references trole(id_rolename)
);

create table if not exists employee(
	emp_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	emp_etyp_id INTEGER,
	emp_name varchar(30) not null,
	emp_surname1 varchar(30) not null,
	emp_surname2 varchar(30),
    emp_birth_date date,
    emp_address varchar(150),
    emp_bank_account varchar(40) not null,
	emp_identification varchar(20) not null,
	emp_email varchar(150),
	emp_phone varchar(20) not null,
	emp_htl_id INTEGER,
	emp_created_date timestamp default current_timestamp,
	emp_usr_user varchar(50),

	constraint uq_emp_identification unique (emp_identification),
    constraint uq_emp_usr_user unique(emp_usr_user),
	constraint fk_employee_type_employee foreign key (emp_etyp_id) references employee_type(etyp_id),
	constraint fk_employee_hotel foreign key (emp_htl_id) references hotel(htl_id),
	constraint fk_employee_user foreign key (emp_usr_user) references tuser(user_)
);

create table if not exists employee_schedule(
	emp_sch_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	emp_sch_emp_id INTEGER not null,
	emp_sch_day DATE not null,
	emp_sch_turn_in time not null,
	emp_sch_turn_out time not null,
	emp_sch_turn_extra varchar(20),
	emp_sch_comments varchar(50),
	constraint fk_emp_id foreign key (emp_sch_emp_id) references employee(emp_id)
);

create table if not exists employee_clock(
	emp_clk_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
	emp_clk_emp_id INTEGER not null,
	emp_clk_in timestamp,
	emp_clk_out timestamp,
	constraint fk_emp_sch_id foreign key (emp_clk_emp_id) references employee(emp_id)
);

create table if not exists details_type(
    det_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    det_code varchar(5) not null,
    det_description varchar(200),
    det_direct_payment boolean not null default false,
    CONSTRAINT uq_code_det UNIQUE (det_code)
);

create table if not exists special_offer_product(
    sopt_det_id integer,
    sopt_sofr_id integer,
    sopt_percent decimal(10,2),
    sopt_flat decimal(10,2),
    sopt_swap decimal(10,2),
    CONSTRAINT pk_special_offer_product PRIMARY KEY (sopt_det_id,sopt_sofr_id),
    CONSTRAINT fk_sopt_det FOREIGN KEY (sopt_det_id) REFERENCES details_type(det_id),
    CONSTRAINT fk_sopt_sofr FOREIGN KEY (sopt_sofr_id) REFERENCES special_offer(sofr_id)
);

create table if not exists special_offer_condition(
    socd_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    socd_sofr_id integer not null,
    socd_htl_id integer,
    socd_typ_id integer,
    socd_nights integer,
    socd_start date,
    socd_end date,
    CONSTRAINT fk_socd_sofr FOREIGN KEY (socd_sofr_id) REFERENCES special_offer(sofr_id)
);

create table if not exists details_type_hotel(
    dhtl_htl_id Integer,
    dhtl_det_id Integer,
    dhtl_active boolean default true not null,
    Constraint pk_details_type_hotel PRIMARY KEY (dhtl_htl_id,dhtl_det_id),
    constraint fk_dhtl_htl foreign KEY (dhtl_htl_id) REFERENCES hotel(htl_id),
    constraint fk_dhtl_det foreign key (dhtl_det_id) references details_type(det_id)
);

create table if not exists booking_details(
    bok_det_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    bok_det_bok_id INTEGER NOT NULL,
    bok_det_type INTEGER NOT NULL,
    bok_det_price decimal (10,2) not null,
    bok_det_nominal_price decimal (10,2) not null,
    bok_det_discount_reason varchar(120),
    bok_det_date DATE not null,
    bok_det_paid BOOLEAN NOT NULL default false,
    CONSTRAINT fk_bok_id FOREIGN KEY (bok_det_bok_id) REFERENCES booking(bok_id),
    CONSTRAINT fk_details_type FOREIGN KEY (bok_det_type) REFERENCES details_type(det_id)
);

create table if not exists picture(
pic_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
pic_name varchar(50) not null,
pic_desc varchar(255),
pic bytea not null,
pic_htl_id INTEGER,
pic_rom_typ INTEGER,

constraint fk_pic_htl_id foreign key(pic_htl_id) references hotel(htl_id),
constraint fk_pic_rom_typ foreign key(pic_rom_typ) references room_type(rtyp_id)
);

create table if not exists room_status_record(
rsr_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
rsr_htl_id INTEGER not null,
rsr_rom_number  varchar(15)not null,
rsr_rom_rsts_id INTEGER,
rsr_rom_status_date DATE not null,

constraint fk_htl_status_record foreign key(rsr_htl_id) references hotel(htl_id),
constraint fk_rom_number_status_record foreign key(rsr_rom_number,rsr_htl_id) references room(rom_number,rom_htl_id),
constraint fk_rom_rsts_id_status_record foreign key(rsr_rom_rsts_id) references room_status(rsts_id)

);

-- PRECIOS --

create table if not exists season(
    sea_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    sea_name varchar(30),
    sea_multiplier integer,
    CONSTRAINT fk_unique_name UNIQUE (sea_name)
);

create table if not exists dates_season(
    dts_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    dts_htl_id integer not null,
    dts_start_date date not null,
    dts_end_date date not null,
    dts_sea_id integer not null,
    dts_comments varchar(200),
    CONSTRAINT fk_htl_season FOREIGN KEY(dts_htl_id) REFERENCES hotel(htl_id),
    CONSTRAINT fk_season_id_dates FOREIGN KEY (dts_sea_id) REFERENCES season(sea_id)
);

create table if not exists offers(
    ofe_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    ofe_day date not null,
    ofe_htl_id integer not null,
    ofe_rom_typ_id integer not null,
    ofe_night_price decimal(10,2) NOT NULL,
    CONSTRAINT fk_htl_offer FOREIGN KEY(ofe_htl_id) REFERENCES hotel(htl_id),
    CONSTRAINT fk_rom_typ_offer FOREIGN KEY (ofe_rom_typ_id) REFERENCES room_type(rtyp_id)
);

create table if not exists cancellations(
        can_id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
        can_htl_id integer not null,
        can_rtyp integer not null,
        can_sea_id integer not null,
        can_days_to_bok integer not null,
        can_nights_to_pay integer not null,
        CONSTRAINT  fk_can_htl FOREIGN KEY (can_htl_id) REFERENCES hotel(htl_id),
        CONSTRAINT fk_can_rtyp FOREIGN KEY (can_rtyp) REFERENCES room_type(rtyp_id),
        CONSTRAINT fk_can_sea FOREIGN KEY (can_sea_id) REFERENCES season(sea_id)
);